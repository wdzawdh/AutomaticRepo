<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>523</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>public.image</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.1.1</string>
				<key>AMApplication</key>
				<array>
					<string>系统</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>captureMainMonitorOnly</key>
					<dict/>
					<key>enableSounds</key>
					<dict/>
					<key>interactiveType</key>
					<dict/>
					<key>outputFilePath</key>
					<dict>
						<key>isPathPopUp</key>
						<true/>
						<key>variableUUIDsInMenu</key>
						<array/>
					</dict>
					<key>screenshotType</key>
					<dict/>
					<key>timedScreenshot</key>
					<dict/>
					<key>waitSeconds</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>public.image</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Take Screenshot.action</string>
				<key>ActionName</key>
				<string>截屏</string>
				<key>ActionParameters</key>
				<dict>
					<key>captureMainMonitorOnly</key>
					<true/>
					<key>enableSounds</key>
					<true/>
					<key>interactiveType</key>
					<integer>1</integer>
					<key>outputFilePath</key>
					<string>~/.automatic/cache/screenshot.png</string>
					<key>screenshotType</key>
					<integer>1</integer>
					<key>timedScreenshot</key>
					<integer>0</integer>
					<key>waitSeconds</key>
					<integer>10</integer>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.TakeScreenShot</string>
				<key>CFBundleVersion</key>
				<string>1.1.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<true/>
				<key>CanShowWhenRun</key>
				<false/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>AMTakeScreenshotAction</string>
				<key>Disabled</key>
				<false/>
				<key>IgnoresInput</key>
				<true/>
				<key>InputUUID</key>
				<string>F6388309-DF9A-4F13-B5CE-12D829E337B6</string>
				<key>Keywords</key>
				<array>
					<string>图像</string>
					<string>照片</string>
					<string>创建</string>
					<string>制作</string>
					<string>获得</string>
					<string>新建</string>
					<string>文件</string>
				</array>
				<key>OutputUUID</key>
				<string>3C07ED21-8AC5-4AB2-814A-01157FAEC282</string>
				<key>UUID</key>
				<string>A7E1883B-1421-4BFF-8E6E-1727FE23F688</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>System</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>interactiveType</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<integer>10</integer>
						<key>name</key>
						<string>waitSeconds</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<true/>
						<key>name</key>
						<string>enableSounds</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>screenshotType</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>outputFilePath</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
					<key>5</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>timedScreenshot</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>5</string>
					</dict>
					<key>6</key>
					<dict>
						<key>default value</key>
						<true/>
						<key>name</key>
						<string>captureMainMonitorOnly</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>6</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>309.000000:242.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Take Screenshot.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>自动操作</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>运行Shell脚本</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/bash

# 配置文件路径
CONFIG_FILE="$HOME/.automatic/github_images_config.properties"

# 默认配置
default_config="\
# ------------上传Github图库配置------------
# GitHub Token
GITHUB_TOKEN=token
# 仓库名称
REPO=username/repository
# 目标分支
BRANCH=master
# 仓库中的目标目录路径
TARGET_DIR=images
"

# 检查配置文件是否存在
if [ ! -f "$CONFIG_FILE" ]; then
    # 文件不存在，创建文件并写入默认配置
    mkdir -p "$(dirname "$CONFIG_FILE")"
    echo "$default_config" &gt; "$CONFIG_FILE"

    # 提示用户如何配置
    osascript &lt;&lt;EOF
    tell app "Finder"
        activate
        display alert "配置文件已创建并包含默认配置。请点击确认后编辑配置文件。" buttons {"编辑配置文件"} default button "编辑配置文件"
    end tell
EOF
    # 打开配置文件
    open -a "TextEdit" "$CONFIG_FILE"
	exit 0
fi

# 默认配置项
required_configs=("GITHUB_TOKEN" "REPO" "BRANCH" "TARGET_DIR")

# 检查配置项是否存在
check_config() {
    local key="$1"
    if grep -q "^${key}=" "$CONFIG_FILE"; then
        return 1  # 配置项存在
    else
        return 0  # 配置项缺失
    fi
}

# 检查缺少的配置项
missing_configs=()

# 检查每个必需的配置项
for key in "${required_configs[@]}"; do
    if check_config "$key"; then
        # 配置项缺失，添加到数组
        missing_configs+=("$key")
    fi
done

# 如果有缺少的配置项，提示用户
if [ "${#missing_configs[@]}" -gt 0 ]; then
    # 格式化提示内容
    missing_list=$(printf "%s\n" "${missing_configs[@]}")
    
    # 弹出提示框告知用户缺少的配置项
    osascript &lt;&lt;EOF
    tell app "Finder"
        activate
        display alert "配置文件缺少以下配置项：\n\n$missing_list\n\n请手动编辑配置文件。" buttons {"编辑配置文件"} default button "编辑配置文件"
    end tell
EOF

    # 打开配置文件供用户编辑
    open -a "TextEdit" "$CONFIG_FILE"
    exit 0
fi

# 变量
GITHUB_TOKEN=$(grep -E "^GITHUB_TOKEN=" "$CONFIG_FILE" | cut -d'=' -f2)  # GitHub Token
REPO=$(grep -E "^REPO=" "$CONFIG_FILE" | cut -d'=' -f2) # 仓库名称，如 username/repo
BRANCH=$(grep -E "^BRANCH=" "$CONFIG_FILE" | cut -d'=' -f2) # 目标分支
FILE_PATH="$1" # 本地文件路径
TARGET_DIR=$(grep -E "^TARGET_DIR=" "$CONFIG_FILE" | cut -d'=' -f2) # 仓库中的目标目录路径

# 定义默认值
DEFAULT_BRANCH="master"

# 如果读取到的值为空，则使用默认值
BRANCH=${BRANCH:-$DEFAULT_BRANCH}

if [[ -z "$GITHUB_TOKEN" || -z "$REPO" || -z "$TARGET_DIR" ]]; then
  exit "请检查配置文件"
fi


# 获取当前时间，格式为 YYYYMMDD_HHMMSS，作为默认文件名
DEFAULT_TIMESTAMP=$(date +"%Y%m%d_%H%M%S")

# 使用 osascript 弹出输入框，让操作人确认文件名，默认值为当前时间
FILE_NAME=$(osascript -e "
try
    display dialog \"请输入文件名\" default answer \"$DEFAULT_TIMESTAMP\" buttons {\"取消\", \"确定\"} default button \"确定\"
    set userInput to text returned of result
    return userInput
on error
    return "-1"
end try
")

# 检查用户是否点击了“取消”按钮
if [ "$FILE_NAME" == "-1" ]; then
    exit 0
fi

# 获取文件扩展名
EXTENSION="${FILE_PATH##*.}"

# 将目标路径设为目标目录加确认的文件名
TARGET_PATH="$TARGET_DIR/$FILE_NAME.$EXTENSION"

# 检查文件是否存在且非空
if [[ ! -s "$FILE_PATH" ]]; then
  exit "错误: 文件不存在或为空: $FILE_PATH"
fi

# 获取文件内容并进行 Base64 编码 (适用于 macOS 和 Linux)
CONTENT=$(base64 -i "$FILE_PATH" | tr -d '\n')

# 打印编码后的文件内容以验证是否为空
if [[ -z "$CONTENT" ]]; then
  exit "错误: 文件编码后为空"
fi

# GitHub API 上传文件请求的 URL
URL="https://api.github.com/repos/$REPO/contents/$TARGET_PATH"

# 获取提交信息，生成 JSON 数据
read -r -d '' PAYLOAD &lt;&lt; EOM
{
  "message": "upload file",
  "content": "$CONTENT",
  "branch": "$BRANCH"
}
EOM

# 使用 curl 调用 GitHub API 上传文件，并解析响应
RESPONSE=$(curl -s -X PUT \
  -H "Authorization: token $GITHUB_TOKEN" \
  -d "$PAYLOAD" \
  "$URL")

# 检查上传是否成功，并获取第一个 content 对象下的 html_url
if echo "$RESPONSE" | grep -q '"content"'; then
  # 从 content 对象中提取 html_url
  FILE_URL=$(echo "$RESPONSE" | grep -o '"html_url": *"[^"]*"' | head -n 1 | cut -d '"' -f 4)
  
  # 替换为 jsDelivr CDN 链接
  CDN_URL=$(echo "$FILE_URL" | sed -e "s|https://github.com/\(.*\)/blob/\(.*\)|https://cdn.jsdelivr.net/gh/\1@\2|")

  # 生成 Markdown 图片链接
  MARKDOWN_LINK="![image]($CDN_URL)"
  
  # 显示确认弹窗
  osascript -e "display alert \"上传成功：$MARKDOWN_LINK\" buttons {\"复制链接\"}"

  # 复制到剪贴板
  echo "$MARKDOWN_LINK" | pbcopy
else
  exit "文件上传失败！响应信息: $RESPONSE"
fi

</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>Disabled</key>
				<false/>
				<key>InputUUID</key>
				<string>0FD9E54F-2812-4805-A0F9-E54A4205D7A5</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>脚本</string>
					<string>命令</string>
					<string>运行</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>8FC64834-C670-4EE0-8020-A506B58205FD</string>
				<key>UUID</key>
				<string>1F6ADCB9-1554-4CE8-87EE-46A6AA913D9E</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>309.000000:424.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>FC56C62B-2248-457C-AD0F-E7EF51DAFAB1</key>
		<dict>
			<key>from</key>
			<string>A7E1883B-1421-4BFF-8E6E-1727FE23F688 - A7E1883B-1421-4BFF-8E6E-1727FE23F688</string>
			<key>to</key>
			<string>1F6ADCB9-1554-4CE8-87EE-46A6AA913D9E - 1F6ADCB9-1554-4CE8-87EE-46A6AA913D9E</string>
		</dict>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
