name: Release .app folders

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发

permissions:
  contents: write  # 确保 GITHUB_TOKEN 有写权限

jobs:
  release-apps:
    runs-on: macos-latest  # 使用 macOS 环境
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Find all .app directories in the root folder
      - name: Find .app directories
        id: find_apps
        run: |
          # 查找所有以 .app 结尾的文件夹
          apps=$(find . -maxdepth 1 -type d -name "*.app")
          echo "Found app directories: $apps"
          echo "::set-output name=apps::$apps"
        shell: bash

      # Step 3: Create a release for each .app folder
      - name: Create releases for .app folders
        run: |
          for app in ${{ steps.find_apps.outputs.apps }}; do
            # 获取当前时间作为版本号
            timestamp=$(date +%Y%m%d%H%M%S)
            app_name=$(basename "$app" .app)

            # 打包 .app 文件夹为 ZIP 文件
            zip_file="${app_name}_${timestamp}.zip"
            zip -r "$zip_file" "$app"

            # 创建 GitHub Release
            curl --request POST \
              --url "https://api.github.com/repos/${{ github.repository }}/releases" \
              --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              --header "Content-Type: application/json" \
              --data '{
                "tag_name": "'"$app_name-$timestamp"'",
                "target_commitish": "'"${{ github.sha }}"'",
                "name": "'"$app_name Release $timestamp"'",
                "draft": false,
                "prerelease": false
              }'

            # 获取最新创建的 Release ID
            release_id=$(curl --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/releases/tags/"$app_name-$timestamp" \
              | jq '.id')

            # 上传 ZIP 文件到 Release
            curl --request POST \
              --url "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$zip_file" \
              --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              --header "Content-Type: application/zip" \
              --upload-file "$zip_file"
          done